package NIIT;

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;
import java.lang.reflect.Constructor;
import java.util.Arrays;

@Target(ElementType.CONSTRUCTOR)
@Retention(RetentionPolicy.RUNTIME)
@interface MyInterfaceConstr{
	String cocntr();
}


class MyClass2{
	private int val;
	
	@MyInterfaceConstr(cocntr = "This costructor")
	public MyClass2(int i){
		this.val = i;
	}
	
	
	public void setVal(int i) {
		val += i;
	}
	
	
	public int getVal() {
		return val;
	}
}


class GetConstrMeth {
	public void gam() throws ClassNotFoundException {
	
		Class<?> c = Class.forName("NIIT.MyClass2");
		
		Constructor<?>[] ans = c.getConstructors();
		for(Constructor<?> a: ans){
			System.out.println(Arrays.toString(a.getAnnotations()));
		}
	}
}


public class ReturnAnnConstructor {

	public static void main(String[] args) throws ClassNotFoundException  {
		MyClass2 m = new MyClass2(1);
		m.setVal(1);
		m.getVal();
		System.out.println("Annotation");
		
		GetConstrMeth gcm = new GetConstrMeth();
		gcm.gam();
	}
}
