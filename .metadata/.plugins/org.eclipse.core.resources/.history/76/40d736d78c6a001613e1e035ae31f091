package NIIT;

@FunctionalInterface  //говоритБ что интерф фукционален
interface Action{
	 String act(int i);
	 default void act2(){System.out.println("act2 impl");}
}


class A implements Action{
	@Override
	public String act(int i) {
		System.out.println("class A act() impl");
		return "as";
	}
}
public static void handleAction(Action action) {
	System.out.println(action.act(42)); 
}

public class Main1 {

	static public int classf = 4;
	
	public static void main(String[] args) {
		
		final int local = 5;
		
		Action l1 = (int i)->{
			String line = "l1";
			line += classf;
			return line;
		};
		
		Action a = new A();
		a.act(local);
		handleAction(a);
		
		handleAction((int i)->{
			System.out.println("Anonim");
		});
		
		Action l1 = (int value) ->{return System.out.println("l1 act() impl");};
		Action l2 = (int value) ->{return System.out.println("l2 act() impl");};
		Action l3 = (int value) ->{return System.out.println("l3 act() impl");};
		
		for (int i = 0; i < 3; i++) {
			Action impl = null;
			if(i == 0){
				impl = l1;
			}
			else{
				if (i == 1) {
					impl = l2;
				}
				else {
					impl = l3;
				}
		}
		}

	}

}



