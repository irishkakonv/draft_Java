package adf;

import java.awt.Container;
import java.awt.Window.Type;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Map;

@FunctionalInterface
interface IInspect<T> {
	public T inspect();
}

@FunctionalInterface
interface ISet<T> {
	public void set(T type);
}

@FunctionalInterface
interface IModif<T> {
	public void modif();
}

class Student_<T> {
	T name;
	T setAdd;
	T modifAdd;
	T inspectAdd;
}

public class MyContaner_<T> implements IInspect<T>, ISet<T>, IModif<T> {
	private String string;
	
	ArrayList<Student_> arr = new ArrayList<>();
	
	
	public void add(T name, T str1, T str2, T str3) {
		Student_ st = new Student_();
		st.name = name;
		st.setAdd =str1;
		st.modifAdd = str2;
		st.inspectAdd = str3;
		arr.add(st);
		System.out.println(arr.toString());
	}
	
	
	@SuppressWarnings("unchecked")
	IInspect<T> inspect = () ->{return (T) arr;};
	
	ISet<T> set = (T type) ->{string = (String) type;};
	
	IModif<T> modif = () ->{
		for (Student_ string : arr) {
			System.out.println(string.toString());
		}
	};
	
	public static <T> void main(String[] args) {
		MyContaner_<String> mc = new MyContaner_<String>();
		
		mc.add("Peter", "inspect", "set", "modif");
		mc.inspect();
		mc.modif();
		mc.set("Hello!");
	}
}
